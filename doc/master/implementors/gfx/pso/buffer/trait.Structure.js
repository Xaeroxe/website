(function() {var implementors = {};
implementors["amethyst"] = ["impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.PointLight.html\" title=\"struct amethyst_renderer::pass::forward::PointLight\">PointLight</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.DirectionalLight.html\" title=\"struct amethyst_renderer::pass::forward::DirectionalLight\">DirectionalLight</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.VertexArgs.html\" title=\"struct amethyst_renderer::pass::forward::VertexArgs\">VertexArgs</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.FragmentArgs.html\" title=\"struct amethyst_renderer::pass::forward::FragmentArgs\">FragmentArgs</a>","impl Structure&lt;Format&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.Vertex.html\" title=\"struct amethyst_renderer::pass::deferred::Vertex\">Vertex</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.PointLight.html\" title=\"struct amethyst_renderer::pass::deferred::PointLight\">PointLight</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.DirectionalLight.html\" title=\"struct amethyst_renderer::pass::deferred::DirectionalLight\">DirectionalLight</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.FragmentLightArgs.html\" title=\"struct amethyst_renderer::pass::deferred::FragmentLightArgs\">FragmentLightArgs</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.VertexArgs.html\" title=\"struct amethyst_renderer::pass::deferred::VertexArgs\">VertexArgs</a>","impl Structure&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>BaseType, ContainerType<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.FragmentArgs.html\" title=\"struct amethyst_renderer::pass::deferred::FragmentArgs\">FragmentArgs</a>","impl Structure&lt;Format&gt; for <a class=\"struct\" href=\"amethyst_renderer/struct.VertexPosNormal.html\" title=\"struct amethyst_renderer::VertexPosNormal\">VertexPosNormal</a>",];
implementors["amethyst_renderer"] = ["impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.PointLight.html\" title=\"struct amethyst_renderer::pass::forward::PointLight\">PointLight</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.DirectionalLight.html\" title=\"struct amethyst_renderer::pass::forward::DirectionalLight\">DirectionalLight</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.VertexArgs.html\" title=\"struct amethyst_renderer::pass::forward::VertexArgs\">VertexArgs</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/forward/struct.FragmentArgs.html\" title=\"struct amethyst_renderer::pass::forward::FragmentArgs\">FragmentArgs</a>","impl Structure&lt;Format&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.Vertex.html\" title=\"struct amethyst_renderer::pass::deferred::Vertex\">Vertex</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.PointLight.html\" title=\"struct amethyst_renderer::pass::deferred::PointLight\">PointLight</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.DirectionalLight.html\" title=\"struct amethyst_renderer::pass::deferred::DirectionalLight\">DirectionalLight</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.FragmentLightArgs.html\" title=\"struct amethyst_renderer::pass::deferred::FragmentLightArgs\">FragmentLightArgs</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.VertexArgs.html\" title=\"struct amethyst_renderer::pass::deferred::VertexArgs\">VertexArgs</a>","impl Structure&lt;ConstFormat&gt; for <a class=\"struct\" href=\"amethyst_renderer/pass/deferred/struct.FragmentArgs.html\" title=\"struct amethyst_renderer::pass::deferred::FragmentArgs\">FragmentArgs</a>","impl Structure&lt;Format&gt; for <a class=\"struct\" href=\"amethyst_renderer/struct.VertexPosNormal.html\" title=\"struct amethyst_renderer::VertexPosNormal\">VertexPosNormal</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
